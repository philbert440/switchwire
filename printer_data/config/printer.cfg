[include shell_command.cfg]
[include fluidd.cfg]
[include sensorless.cfg]
[include stealthburner_leds.cfg]
[include nozzle_scrub.cfg]
[virtual_sdcard]
path: /home/philip/printer_data/gcodes
on_error_gcode: CANCEL_PRINT
# Enable object exclusion
[exclude_object]
# Enable arcs support
[gcode_arcs]
resolution: 0.1

[printer]
kinematics: corexz
max_velocity: 270
max_accel: 7000
max_z_velocity: 60
max_z_accel: 1000

[mcu]
###Change to device found by "ls -l /dev/serial/by-id/" with just one this MCU connected to Pi
serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.2:1.0

#####################################################################
# 	X Stepper Settings
#####################################################################

######
# Motor -XM
# Endstop - X-STOP
###############
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
microsteps: 16
rotation_distance: 40
position_endstop: 0
position_max: 252
homing_speed: 40
## Ucomment one of the following:
## Switch-based endstop for X
#endstop_pin: PG12
## Sensorless endstop for X
homing_retract_dist: 0
endstop_pin: tmc2209_stepper_x:virtual_endstop

[tmc2209 stepper_x]
uart_pin: PC4
diag_pin: PG6
run_current: 0.800
stealthchop_threshold: 999999
driver_SGTHRS: 104  # 255 is most sensitive value, 0 is least sensitive

#####################################################################
#   Y Stepper Settings
#####################################################################

######
# Motor -YM
# Endstop - Y-STOP
###############
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
microsteps: 16
rotation_distance: 40
position_endstop: 230
position_min: -25
position_max: 230
homing_speed: 40
## Ucomment one of the following:
## Switch-based endstop for Y
#endstop_pin: PG12
## Sensorless endstop for Y
homing_retract_dist: 0
endstop_pin: tmc2209_stepper_y:virtual_endstop

[tmc2209 stepper_y]
uart_pin: PD11
diag_pin: PG9
run_current: 0.800
stealthchop_threshold: 999999
driver_SGTHRS: 74  # 255 is most sensitive value, 0 is least sensitive

#####################################################################
# 	Z Stepper Settings
#####################################################################

######
# Motor -ZAM
# Endstop - Z-STOP
###############
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 40
position_min: -10.0
position_max: 250
homing_speed: 20
#position_endstop: 0
endstop_pin: probe:z_virtual_endstop

[tmc2209 stepper_z]
uart_pin: PC6
#diag_pin: PG10
run_current: 0.650
stealthchop_threshold: 999999


#####################################################################
#   EBB CAN Settings
#####################################################################


# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.
[mcu EBBCan]
canbus_uuid: 00143c77f11f

# embedded temperature sensor
[temperature_sensor U2C]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 0
max_temp: 100

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345

[extruder]
step_pin: EBBCan: PD0
dir_pin: !EBBCan: PD1
enable_pin: !EBBCan: PD2
full_steps_per_rotation: 200                   # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
rotation_distance: 21.1522995                    # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10                              # For Mini Afterburner
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_pin: EBBCan: PA3
sensor_type: ATC Semitec 104NT-4-R025H42G
control: pid                                   # Do PID calibration after initial checks
pid_Kp=28.091
pid_Ki=1.149
pid_Kd=171.709
min_temp: -100
max_temp: 300
min_extrude_temp: 170
max_extrude_only_distance: 150
max_extrude_cross_section: 0.8
pressure_advance: 0.07965                         # See tuning pressure advance doc
min_extrude_temp: 0

# [tmc2209 extruder]
# uart_pin: EBBCan: PA15
# run_current: 0.650
# stealthchop_threshold: 999999

[tmc2240 extruder]
cs_pin: EBBCan: PA15
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
driver_TPFD: 0
run_current: 0.650
stealthchop_threshold: 0

[fan]
pin: EBBCan: PA1

[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
heater_temp: 40.0

#####################################################################
# 	Probe
#####################################################################

######
#Z Max Connector on Z(main) Board
#Inductive Probe
###############
## NPN and PNP proximity switch types can be set by jumper
[probe]
pin: ^EBBCan: PB6
x_offset: 0
y_offset: 0
speed: 3.0
lift_speed: 10
samples: 3
activate_gcode:
    {% set PROBE_TEMP = 140 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
#####################################################################
# 	Bed Heater
#####################################################################

######
# BED Connector
###############
[heater_bed]
heater_pin: PA1
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PF3
min_temp: 0
max_temp: 130
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

#####################################################################
# 	Fan Control
#####################################################################

######
# Electronics Fan
# FAN1 Connector
###############
[controller_fan my_controller_fan]
pin: PD12 
max_power: 1.00
kick_start_time: 0.200
heater: heater_bed


#####################################################################
#   Homing and Bed Mesh
#####################################################################
[homing_override]
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    G0 X125 Y125 F4000
    G28 Z0
    G0 Z25 F500
  {% endif %}

[bed_mesh]
speed: 100
horizontal_move_z: 10
mesh_min: 25,25
mesh_max: 200,200
probe_count: 4,4
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

#####################################################################
#   Case Lights
#####################################################################
[output_pin LIGHTS]
pin: PB10
value: 0
shutdown_value: 0

[gcode_macro lights_on]
gcode:
    SET_PIN PIN=LIGHTS VALUE=1.0

[gcode_macro lights_off]
gcode:
    SET_PIN PIN=LIGHTS VALUE=0.0


#####################################################################
# 	Macros
#####################################################################
[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(50)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}

    M140 S{BED_TEMP}
    M117 Homing... ; display message
    STATUS_HOMING
    # Home the printer
    G28
    #Set bed mesh profile
    STATUS_MESHING
    BED_MESH_CALIBRATE ADAPTIVE=1
    G1 X100 Y-25 Z5 F3000
    M117 Heating... ; display message
    STATUS_HEATING
    #Wait for bed and nozzle heating
    M109 S{EXTRUDER_TEMP}
    M190 S{BED_TEMP}
    CLEAN_NOZZLE
    M117 Printing...
    STATUS_PRINTING

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    
    #  Commence PRINT_END
    M400                             ; wait for buffer to clear
    G92 E0                           ; zero the extruder
    G1 E-4.0 F3600                   ; retract
    G91                              ; relative positioning
    G0 Z{z_safe} F3600               ; move nozzle up
    G0 X{x_safe} Y{y_safe} F7000    ; move nozzle to remove stringing
    
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan
    G90                              ; absolute positioning
    G0 X{max_x / 2} Y{max_y} F3600   ; park nozzle at rear
    M117 Finished!
[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=load_state
    M300 # beep
    G91
    G92 E0
    G1 E25 F{speed} # purge
    M300
    M300
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E25 F{speed} # purge
    RESTORE_GCODE_STATE NAME=unload_state
    
######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 38.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 41.6
#*#
#*# [probe]
#*# z_offset = -0.664
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.037500, 0.387500, 0.627083, 0.577083
#*# 	-0.050000, 0.129167, 0.252083, 0.368750
#*# 	-0.212500, -0.083333, 0.047917, 0.227083
#*# 	-0.291667, -0.087500, 0.068750, 0.202083
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 199.99
#*# min_y = 25.0
#*# max_y = 199.99
